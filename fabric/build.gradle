plugins {
    id 'fabric-loom' version "${loom_version}" apply false
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'fabric-loom'
    apply plugin: 'com.github.johnrengelman.shadow'

    version = "${mod_version}"
    group = "${mod_group_id}.fabric"

    base {
        archivesName = "${mod_id}-${loader_name}-${minecraft_version}"
    }

    java {
        withSourcesJar()
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    dependencies {

        minecraft "com.mojang:minecraft:${minecraft_version}"

        mappings loom.officialMojangMappings() // reserved for fabric loom

        modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
        modImplementation "net.fabricmc:fabric-loader:${loader_version}"

        implementation project(':common')
        implementation project(':client')
        implementation project(":vanilla:$project.name")

        shadow project(':common')
        shadow project(':client')
        shadow project(":vanilla:$project.name")

        implementation 'com.google.code.findbugs:jsr305:3.0.2'
    }

    processResources {

        duplicatesStrategy = DuplicatesStrategy.INCLUDE

        filesMatching('fabric.mod.json') {
            expand "mod_version": mod_version,
                    "mod_id": "${mod_id}-port-${minecraft_version.replace(".", "-")}",
                    "mod_name": mod_name,
                    "mod_description": mod_description,
                    "minecraft_version": minecraft_version
        }

        from project(':common').sourceSets.main.resources
        from project(':client').sourceSets.main.resources
    }

    shadowJar {
        configurations = [project.configurations.shadow]
        dependencies {
            exclude dependency('com.google.code.findbugs:jsr305')
        }
        relocate 'dev.huskuraft.effortless.vanilla', 'dev.huskuraft.effortless.fabric'
    }

    remapJar {
        dependsOn shadowJar
        inputFile = shadowJar.archiveFile
    }

    dependencies {
    }

    processResources {
        from project(":vanilla:${project.name}").file("src/main/resources")
    }

    loom {
        accessWidenerPath = project(":vanilla:$project.name").file("src/main/resources/effortless.accesswidener")
        mixin {
            add(sourceSets.main, 'effortless.fabric.refmap.json')
        }
    }

    shadowJar {
    }

}
